-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SneakySnake_bit_after_neighbohood is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    DNA_nsh : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shl_one : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shl_two : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shl_three : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shl_four : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shl_five : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shr_one : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shr_two : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shr_three : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shr_four : IN STD_LOGIC_VECTOR (7 downto 0);
    DNA_shr_five : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of SneakySnake_bit_after_neighbohood is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal DNA_shr_five_read_reg_950 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal DNA_shr_four_read_reg_956 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_three_read_reg_961 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_two_read_reg_966 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_one_read_reg_971 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_five_read_reg_976 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_four_read_reg_981 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_three_read_reg_986 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_two_read_reg_991 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_one_read_reg_996 : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_nsh_read_reg_1001 : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_9_count_one_bit_fu_162_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_9_reg_1006 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp25 : BOOLEAN;
    signal max_12_fu_387_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal max_12_reg_1012 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln660_fu_419_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln660_reg_1018 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln665_fu_427_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln665_reg_1023 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln666_fu_437_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln666_reg_1028 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln667_fu_447_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln667_reg_1033 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln668_fu_457_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln668_reg_1038 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln669_fu_467_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln669_reg_1043 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln670_fu_477_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln670_reg_1048 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln671_fu_487_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln671_reg_1053 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln672_fu_497_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln672_reg_1058 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln673_fu_506_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln673_reg_1064 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln674_fu_515_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln674_reg_1070 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln675_fu_524_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln675_reg_1076 : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_38_count_one_bit_fu_203_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_38_reg_1082 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp76 : BOOLEAN;
    signal max_23_fu_591_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal max_23_reg_1088 : STD_LOGIC_VECTOR (3 downto 0);
    signal bit_sel_reg_1094 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln660_2_fu_682_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln660_2_reg_1099 : STD_LOGIC_VECTOR (0 downto 0);
    signal counter_A_18_count_one_bit_fu_243_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_18_reg_1104 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp130 : BOOLEAN;
    signal counter_A_43_count_one_bit_fu_248_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_43_reg_1110 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp131 : BOOLEAN;
    signal counter_A_20_count_one_bit_fu_253_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_20_reg_1116 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp132 : BOOLEAN;
    signal counter_A_44_count_one_bit_fu_258_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_44_reg_1122 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp133 : BOOLEAN;
    signal counter_A_22_count_one_bit_fu_263_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_22_reg_1128 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp134 : BOOLEAN;
    signal counter_A_45_count_one_bit_fu_268_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_45_reg_1134 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp135 : BOOLEAN;
    signal counter_A_24_count_one_bit_fu_273_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_24_reg_1140 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp136 : BOOLEAN;
    signal counter_A_46_count_one_bit_fu_278_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_46_reg_1146 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp137 : BOOLEAN;
    signal max_35_fu_816_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal max_35_reg_1151 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln318_fu_824_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln318_reg_1157 : STD_LOGIC_VECTOR (1 downto 0);
    signal counter_A_count_one_bit_fu_108_ap_ready : STD_LOGIC;
    signal counter_A_count_one_bit_fu_108_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_1_count_one_bit_fu_114_ap_ready : STD_LOGIC;
    signal counter_A_1_count_one_bit_fu_114_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_30_count_one_bit_fu_120_ap_ready : STD_LOGIC;
    signal counter_A_30_count_one_bit_fu_120_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_3_count_one_bit_fu_126_ap_ready : STD_LOGIC;
    signal counter_A_3_count_one_bit_fu_126_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_31_count_one_bit_fu_132_ap_ready : STD_LOGIC;
    signal counter_A_31_count_one_bit_fu_132_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_5_count_one_bit_fu_138_ap_ready : STD_LOGIC;
    signal counter_A_5_count_one_bit_fu_138_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_32_count_one_bit_fu_144_ap_ready : STD_LOGIC;
    signal counter_A_32_count_one_bit_fu_144_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_7_count_one_bit_fu_150_ap_ready : STD_LOGIC;
    signal counter_A_7_count_one_bit_fu_150_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_33_count_one_bit_fu_156_ap_ready : STD_LOGIC;
    signal counter_A_33_count_one_bit_fu_156_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_9_count_one_bit_fu_162_ap_ready : STD_LOGIC;
    signal counter_A_34_count_one_bit_fu_168_ap_ready : STD_LOGIC;
    signal counter_A_34_count_one_bit_fu_168_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_35_count_one_bit_fu_173_ap_ready : STD_LOGIC;
    signal counter_A_35_count_one_bit_fu_173_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_35_count_one_bit_fu_173_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_2_count_one_bit_fu_178_ap_ready : STD_LOGIC;
    signal counter_A_2_count_one_bit_fu_178_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_2_count_one_bit_fu_178_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_36_count_one_bit_fu_183_ap_ready : STD_LOGIC;
    signal counter_A_36_count_one_bit_fu_183_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_36_count_one_bit_fu_183_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_6_count_one_bit_fu_188_ap_ready : STD_LOGIC;
    signal counter_A_6_count_one_bit_fu_188_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_6_count_one_bit_fu_188_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_37_count_one_bit_fu_193_ap_ready : STD_LOGIC;
    signal counter_A_37_count_one_bit_fu_193_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_37_count_one_bit_fu_193_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_10_count_one_bit_fu_198_ap_ready : STD_LOGIC;
    signal counter_A_10_count_one_bit_fu_198_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_10_count_one_bit_fu_198_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_38_count_one_bit_fu_203_ap_ready : STD_LOGIC;
    signal counter_A_38_count_one_bit_fu_203_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_12_count_one_bit_fu_208_ap_ready : STD_LOGIC;
    signal counter_A_12_count_one_bit_fu_208_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_39_count_one_bit_fu_213_ap_ready : STD_LOGIC;
    signal counter_A_39_count_one_bit_fu_213_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_14_count_one_bit_fu_218_ap_ready : STD_LOGIC;
    signal counter_A_14_count_one_bit_fu_218_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_40_count_one_bit_fu_223_ap_ready : STD_LOGIC;
    signal counter_A_40_count_one_bit_fu_223_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_41_count_one_bit_fu_228_ap_ready : STD_LOGIC;
    signal counter_A_41_count_one_bit_fu_228_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_41_count_one_bit_fu_228_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_16_count_one_bit_fu_233_ap_ready : STD_LOGIC;
    signal counter_A_16_count_one_bit_fu_233_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_16_count_one_bit_fu_233_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_42_count_one_bit_fu_238_ap_ready : STD_LOGIC;
    signal counter_A_42_count_one_bit_fu_238_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_42_count_one_bit_fu_238_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal counter_A_18_count_one_bit_fu_243_ap_ready : STD_LOGIC;
    signal counter_A_18_count_one_bit_fu_243_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_43_count_one_bit_fu_248_ap_ready : STD_LOGIC;
    signal counter_A_43_count_one_bit_fu_248_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_20_count_one_bit_fu_253_ap_ready : STD_LOGIC;
    signal counter_A_20_count_one_bit_fu_253_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_44_count_one_bit_fu_258_ap_ready : STD_LOGIC;
    signal counter_A_44_count_one_bit_fu_258_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_22_count_one_bit_fu_263_ap_ready : STD_LOGIC;
    signal counter_A_22_count_one_bit_fu_263_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_45_count_one_bit_fu_268_ap_ready : STD_LOGIC;
    signal counter_A_45_count_one_bit_fu_268_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_24_count_one_bit_fu_273_ap_ready : STD_LOGIC;
    signal counter_A_24_count_one_bit_fu_273_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal counter_A_46_count_one_bit_fu_278_ap_ready : STD_LOGIC;
    signal counter_A_46_count_one_bit_fu_278_input_seq_val : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_ignoreCallOp16 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp17 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp18 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp19 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp20 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp21 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp22 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp23 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp24 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp25 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp42 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp70 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp71 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp72 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp73 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp74 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp75 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp76 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp87 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp88 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp89 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp90 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp127 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp128 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp129 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp130 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp131 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp132 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp133 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp134 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp135 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp136 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp137 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln318_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_fu_289_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_1_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_3_fu_303_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_2_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_4_fu_317_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_3_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_6_fu_331_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_4_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_7_fu_345_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_5_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_9_fu_359_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_6_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_10_fu_373_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_7_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln318_8_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_13_fu_399_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_9_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal large_count_fu_411_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal large_countcast_fu_423_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast43_fu_433_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast44_fu_443_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast45_fu_453_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast46_fu_463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast47_fu_473_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast48_fu_483_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast49_fu_493_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast50_fu_502_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast51_fu_511_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_countcast52_fu_520_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln318_10_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_17_fu_535_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_11_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_19_fu_549_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_12_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_20_fu_563_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_13_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_22_fu_577_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_14_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln318_15_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_25_fu_603_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_16_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_26_fu_615_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_17_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_28_fu_629_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_18_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_29_fu_643_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_19_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal large_count_2_fu_657_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln660_1_fu_665_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln660_fu_669_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal large_count_2cast_fu_686_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast53_fu_696_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast54_fu_706_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast55_fu_716_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast56_fu_726_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast57_fu_736_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast58_fu_746_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast59_fu_756_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast60_fu_766_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast61_fu_776_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal large_count_2cast62_fu_786_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln318_20_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_33_fu_802_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_21_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln660_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln318_22_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_36_fu_844_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_23_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_38_fu_855_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_24_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_39_fu_867_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_25_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_41_fu_879_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_26_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_42_fu_891_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_27_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_44_fu_903_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_28_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_45_fu_915_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln318_29_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln318_1_fu_927_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln318_fu_931_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln660_1_fu_938_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal global_count_1_fu_833_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal global_count_fu_944_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal DNA_nsh_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_one_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_two_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_three_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_four_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shl_five_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_one_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_two_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_three_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_four_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal DNA_shr_five_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (1 downto 0);

    component SneakySnake_bit_count_one_bit IS
    port (
        ap_ready : OUT STD_LOGIC;
        input_seq_val : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_rst : IN STD_LOGIC );
    end component;



begin
    counter_A_count_one_bit_fu_108 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_count_one_bit_fu_108_ap_ready,
        input_seq_val => DNA_nsh_int_reg,
        ap_return => counter_A_count_one_bit_fu_108_ap_return,
        ap_rst => ap_rst);

    counter_A_1_count_one_bit_fu_114 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_1_count_one_bit_fu_114_ap_ready,
        input_seq_val => DNA_shl_one_int_reg,
        ap_return => counter_A_1_count_one_bit_fu_114_ap_return,
        ap_rst => ap_rst);

    counter_A_30_count_one_bit_fu_120 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_30_count_one_bit_fu_120_ap_ready,
        input_seq_val => DNA_shl_two_int_reg,
        ap_return => counter_A_30_count_one_bit_fu_120_ap_return,
        ap_rst => ap_rst);

    counter_A_3_count_one_bit_fu_126 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_3_count_one_bit_fu_126_ap_ready,
        input_seq_val => DNA_shl_three_int_reg,
        ap_return => counter_A_3_count_one_bit_fu_126_ap_return,
        ap_rst => ap_rst);

    counter_A_31_count_one_bit_fu_132 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_31_count_one_bit_fu_132_ap_ready,
        input_seq_val => DNA_shl_four_int_reg,
        ap_return => counter_A_31_count_one_bit_fu_132_ap_return,
        ap_rst => ap_rst);

    counter_A_5_count_one_bit_fu_138 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_5_count_one_bit_fu_138_ap_ready,
        input_seq_val => DNA_shl_five_int_reg,
        ap_return => counter_A_5_count_one_bit_fu_138_ap_return,
        ap_rst => ap_rst);

    counter_A_32_count_one_bit_fu_144 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_32_count_one_bit_fu_144_ap_ready,
        input_seq_val => DNA_shr_one_int_reg,
        ap_return => counter_A_32_count_one_bit_fu_144_ap_return,
        ap_rst => ap_rst);

    counter_A_7_count_one_bit_fu_150 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_7_count_one_bit_fu_150_ap_ready,
        input_seq_val => DNA_shr_two_int_reg,
        ap_return => counter_A_7_count_one_bit_fu_150_ap_return,
        ap_rst => ap_rst);

    counter_A_33_count_one_bit_fu_156 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_33_count_one_bit_fu_156_ap_ready,
        input_seq_val => DNA_shr_three_int_reg,
        ap_return => counter_A_33_count_one_bit_fu_156_ap_return,
        ap_rst => ap_rst);

    counter_A_9_count_one_bit_fu_162 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_9_count_one_bit_fu_162_ap_ready,
        input_seq_val => DNA_shr_four_int_reg,
        ap_return => counter_A_9_count_one_bit_fu_162_ap_return,
        ap_rst => ap_rst);

    counter_A_34_count_one_bit_fu_168 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_34_count_one_bit_fu_168_ap_ready,
        input_seq_val => DNA_shr_five_read_reg_950,
        ap_return => counter_A_34_count_one_bit_fu_168_ap_return,
        ap_rst => ap_rst);

    counter_A_35_count_one_bit_fu_173 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_35_count_one_bit_fu_173_ap_ready,
        input_seq_val => counter_A_35_count_one_bit_fu_173_input_seq_val,
        ap_return => counter_A_35_count_one_bit_fu_173_ap_return,
        ap_rst => ap_rst);

    counter_A_2_count_one_bit_fu_178 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_2_count_one_bit_fu_178_ap_ready,
        input_seq_val => counter_A_2_count_one_bit_fu_178_input_seq_val,
        ap_return => counter_A_2_count_one_bit_fu_178_ap_return,
        ap_rst => ap_rst);

    counter_A_36_count_one_bit_fu_183 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_36_count_one_bit_fu_183_ap_ready,
        input_seq_val => counter_A_36_count_one_bit_fu_183_input_seq_val,
        ap_return => counter_A_36_count_one_bit_fu_183_ap_return,
        ap_rst => ap_rst);

    counter_A_6_count_one_bit_fu_188 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_6_count_one_bit_fu_188_ap_ready,
        input_seq_val => counter_A_6_count_one_bit_fu_188_input_seq_val,
        ap_return => counter_A_6_count_one_bit_fu_188_ap_return,
        ap_rst => ap_rst);

    counter_A_37_count_one_bit_fu_193 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_37_count_one_bit_fu_193_ap_ready,
        input_seq_val => counter_A_37_count_one_bit_fu_193_input_seq_val,
        ap_return => counter_A_37_count_one_bit_fu_193_ap_return,
        ap_rst => ap_rst);

    counter_A_10_count_one_bit_fu_198 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_10_count_one_bit_fu_198_ap_ready,
        input_seq_val => counter_A_10_count_one_bit_fu_198_input_seq_val,
        ap_return => counter_A_10_count_one_bit_fu_198_ap_return,
        ap_rst => ap_rst);

    counter_A_38_count_one_bit_fu_203 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_38_count_one_bit_fu_203_ap_ready,
        input_seq_val => counter_A_38_count_one_bit_fu_203_input_seq_val,
        ap_return => counter_A_38_count_one_bit_fu_203_ap_return,
        ap_rst => ap_rst);

    counter_A_12_count_one_bit_fu_208 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_12_count_one_bit_fu_208_ap_ready,
        input_seq_val => shl_ln672_reg_1058,
        ap_return => counter_A_12_count_one_bit_fu_208_ap_return,
        ap_rst => ap_rst);

    counter_A_39_count_one_bit_fu_213 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_39_count_one_bit_fu_213_ap_ready,
        input_seq_val => shl_ln673_reg_1064,
        ap_return => counter_A_39_count_one_bit_fu_213_ap_return,
        ap_rst => ap_rst);

    counter_A_14_count_one_bit_fu_218 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_14_count_one_bit_fu_218_ap_ready,
        input_seq_val => shl_ln674_reg_1070,
        ap_return => counter_A_14_count_one_bit_fu_218_ap_return,
        ap_rst => ap_rst);

    counter_A_40_count_one_bit_fu_223 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_40_count_one_bit_fu_223_ap_ready,
        input_seq_val => shl_ln675_reg_1076,
        ap_return => counter_A_40_count_one_bit_fu_223_ap_return,
        ap_rst => ap_rst);

    counter_A_41_count_one_bit_fu_228 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_41_count_one_bit_fu_228_ap_ready,
        input_seq_val => counter_A_41_count_one_bit_fu_228_input_seq_val,
        ap_return => counter_A_41_count_one_bit_fu_228_ap_return,
        ap_rst => ap_rst);

    counter_A_16_count_one_bit_fu_233 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_16_count_one_bit_fu_233_ap_ready,
        input_seq_val => counter_A_16_count_one_bit_fu_233_input_seq_val,
        ap_return => counter_A_16_count_one_bit_fu_233_ap_return,
        ap_rst => ap_rst);

    counter_A_42_count_one_bit_fu_238 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_42_count_one_bit_fu_238_ap_ready,
        input_seq_val => counter_A_42_count_one_bit_fu_238_input_seq_val,
        ap_return => counter_A_42_count_one_bit_fu_238_ap_return,
        ap_rst => ap_rst);

    counter_A_18_count_one_bit_fu_243 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_18_count_one_bit_fu_243_ap_ready,
        input_seq_val => counter_A_18_count_one_bit_fu_243_input_seq_val,
        ap_return => counter_A_18_count_one_bit_fu_243_ap_return,
        ap_rst => ap_rst);

    counter_A_43_count_one_bit_fu_248 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_43_count_one_bit_fu_248_ap_ready,
        input_seq_val => counter_A_43_count_one_bit_fu_248_input_seq_val,
        ap_return => counter_A_43_count_one_bit_fu_248_ap_return,
        ap_rst => ap_rst);

    counter_A_20_count_one_bit_fu_253 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_20_count_one_bit_fu_253_ap_ready,
        input_seq_val => counter_A_20_count_one_bit_fu_253_input_seq_val,
        ap_return => counter_A_20_count_one_bit_fu_253_ap_return,
        ap_rst => ap_rst);

    counter_A_44_count_one_bit_fu_258 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_44_count_one_bit_fu_258_ap_ready,
        input_seq_val => counter_A_44_count_one_bit_fu_258_input_seq_val,
        ap_return => counter_A_44_count_one_bit_fu_258_ap_return,
        ap_rst => ap_rst);

    counter_A_22_count_one_bit_fu_263 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_22_count_one_bit_fu_263_ap_ready,
        input_seq_val => counter_A_22_count_one_bit_fu_263_input_seq_val,
        ap_return => counter_A_22_count_one_bit_fu_263_ap_return,
        ap_rst => ap_rst);

    counter_A_45_count_one_bit_fu_268 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_45_count_one_bit_fu_268_ap_ready,
        input_seq_val => counter_A_45_count_one_bit_fu_268_input_seq_val,
        ap_return => counter_A_45_count_one_bit_fu_268_ap_return,
        ap_rst => ap_rst);

    counter_A_24_count_one_bit_fu_273 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_24_count_one_bit_fu_273_ap_ready,
        input_seq_val => counter_A_24_count_one_bit_fu_273_input_seq_val,
        ap_return => counter_A_24_count_one_bit_fu_273_ap_return,
        ap_rst => ap_rst);

    counter_A_46_count_one_bit_fu_278 : component SneakySnake_bit_count_one_bit
    port map (
        ap_ready => counter_A_46_count_one_bit_fu_278_ap_ready,
        input_seq_val => counter_A_46_count_one_bit_fu_278_input_seq_val,
        ap_return => counter_A_46_count_one_bit_fu_278_ap_return,
        ap_rst => ap_rst);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                DNA_nsh_int_reg <= DNA_nsh;
                DNA_shl_five_int_reg <= DNA_shl_five;
                DNA_shl_four_int_reg <= DNA_shl_four;
                DNA_shl_one_int_reg <= DNA_shl_one;
                DNA_shl_three_int_reg <= DNA_shl_three;
                DNA_shl_two_int_reg <= DNA_shl_two;
                DNA_shr_five_int_reg <= DNA_shr_five;
                DNA_shr_four_int_reg <= DNA_shr_four;
                DNA_shr_one_int_reg <= DNA_shr_one;
                DNA_shr_three_int_reg <= DNA_shr_three;
                DNA_shr_two_int_reg <= DNA_shr_two;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                DNA_nsh_read_reg_1001 <= DNA_nsh_int_reg;
                DNA_shl_five_read_reg_976 <= DNA_shl_five_int_reg;
                DNA_shl_four_read_reg_981 <= DNA_shl_four_int_reg;
                DNA_shl_one_read_reg_996 <= DNA_shl_one_int_reg;
                DNA_shl_three_read_reg_986 <= DNA_shl_three_int_reg;
                DNA_shl_two_read_reg_991 <= DNA_shl_two_int_reg;
                DNA_shr_five_read_reg_950 <= DNA_shr_five_int_reg;
                DNA_shr_four_read_reg_956 <= DNA_shr_four_int_reg;
                DNA_shr_one_read_reg_971 <= DNA_shr_one_int_reg;
                DNA_shr_three_read_reg_961 <= DNA_shr_three_int_reg;
                DNA_shr_two_read_reg_966 <= DNA_shr_two_int_reg;
                bit_sel_reg_1094 <= add_ln660_fu_669_p2(1 downto 1);
                max_12_reg_1012 <= max_12_fu_387_p3;
                max_23_reg_1088 <= max_23_fu_591_p3;
                max_35_reg_1151 <= max_35_fu_816_p3;
                shl_ln665_reg_1023 <= shl_ln665_fu_427_p2;
                shl_ln666_reg_1028 <= shl_ln666_fu_437_p2;
                shl_ln667_reg_1033 <= shl_ln667_fu_447_p2;
                shl_ln668_reg_1038 <= shl_ln668_fu_457_p2;
                shl_ln669_reg_1043 <= shl_ln669_fu_467_p2;
                shl_ln670_reg_1048 <= shl_ln670_fu_477_p2;
                shl_ln671_reg_1053 <= shl_ln671_fu_487_p2;
                shl_ln672_reg_1058 <= shl_ln672_fu_497_p2;
                shl_ln673_reg_1064 <= shl_ln673_fu_506_p2;
                shl_ln674_reg_1070 <= shl_ln674_fu_515_p2;
                shl_ln675_reg_1076 <= shl_ln675_fu_524_p2;
                trunc_ln318_reg_1157 <= trunc_ln318_fu_824_p1;
                trunc_ln660_2_reg_1099 <= trunc_ln660_2_fu_682_p1;
                trunc_ln660_reg_1018 <= trunc_ln660_fu_419_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= global_count_fu_944_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp130) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_18_reg_1104 <= counter_A_18_count_one_bit_fu_243_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp132) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_20_reg_1116 <= counter_A_20_count_one_bit_fu_253_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp134) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_22_reg_1128 <= counter_A_22_count_one_bit_fu_263_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp136) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_24_reg_1140 <= counter_A_24_count_one_bit_fu_273_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_38_reg_1082 <= counter_A_38_count_one_bit_fu_203_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp131) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_43_reg_1110 <= counter_A_43_count_one_bit_fu_248_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp133) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_44_reg_1122 <= counter_A_44_count_one_bit_fu_258_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp135) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_45_reg_1134 <= counter_A_45_count_one_bit_fu_268_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp137) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_46_reg_1146 <= counter_A_46_count_one_bit_fu_278_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp25) and (ap_const_logic_1 = ap_ce_reg))) then
                counter_A_9_reg_1006 <= counter_A_9_count_one_bit_fu_162_ap_return;
            end if;
        end if;
    end process;
    add_ln660_1_fu_938_p2 <= std_logic_vector(unsigned(select_ln318_fu_931_p3) + unsigned(ap_const_lv2_1));
    add_ln660_fu_669_p2 <= std_logic_vector(unsigned(trunc_ln660_1_fu_665_p1) + unsigned(trunc_ln660_reg_1018));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp130 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp132 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp133 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp134 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp135 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp137 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp127 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp129 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp130 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp132 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp133 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp134 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp135 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp137 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp70 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp90 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(global_count_fu_944_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= global_count_fu_944_p2;
        else 
            ap_return <= "XX";
        end if; 
    end process;

    counter_A_10_count_one_bit_fu_198_input_seq_val <= std_logic_vector(shift_left(unsigned(DNA_shl_five_read_reg_976),to_integer(unsigned('0' & large_countcast47_fu_473_p1(8-1 downto 0)))));
    counter_A_16_count_one_bit_fu_233_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln666_reg_1028),to_integer(unsigned('0' & large_count_2cast53_fu_696_p1(8-1 downto 0)))));
    counter_A_18_count_one_bit_fu_243_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln668_reg_1038),to_integer(unsigned('0' & large_count_2cast55_fu_716_p1(8-1 downto 0)))));
    counter_A_20_count_one_bit_fu_253_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln670_reg_1048),to_integer(unsigned('0' & large_count_2cast57_fu_736_p1(8-1 downto 0)))));
    counter_A_22_count_one_bit_fu_263_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln672_reg_1058),to_integer(unsigned('0' & large_count_2cast59_fu_756_p1(8-1 downto 0)))));
    counter_A_24_count_one_bit_fu_273_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln674_reg_1070),to_integer(unsigned('0' & large_count_2cast61_fu_776_p1(8-1 downto 0)))));
    counter_A_2_count_one_bit_fu_178_input_seq_val <= std_logic_vector(shift_left(unsigned(DNA_shl_one_read_reg_996),to_integer(unsigned('0' & large_countcast43_fu_433_p1(8-1 downto 0)))));
    counter_A_35_count_one_bit_fu_173_input_seq_val <= std_logic_vector(shift_left(unsigned(DNA_nsh_read_reg_1001),to_integer(unsigned('0' & large_countcast_fu_423_p1(8-1 downto 0)))));
    counter_A_36_count_one_bit_fu_183_input_seq_val <= std_logic_vector(shift_left(unsigned(DNA_shl_two_read_reg_991),to_integer(unsigned('0' & large_countcast44_fu_443_p1(8-1 downto 0)))));
    counter_A_37_count_one_bit_fu_193_input_seq_val <= std_logic_vector(shift_left(unsigned(DNA_shl_four_read_reg_981),to_integer(unsigned('0' & large_countcast46_fu_463_p1(8-1 downto 0)))));
    counter_A_38_count_one_bit_fu_203_input_seq_val <= std_logic_vector(shift_left(unsigned(DNA_shr_one_read_reg_971),to_integer(unsigned('0' & large_countcast48_fu_483_p1(8-1 downto 0)))));
    counter_A_41_count_one_bit_fu_228_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln665_reg_1023),to_integer(unsigned('0' & large_count_2cast_fu_686_p1(8-1 downto 0)))));
    counter_A_42_count_one_bit_fu_238_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln667_reg_1033),to_integer(unsigned('0' & large_count_2cast54_fu_706_p1(8-1 downto 0)))));
    counter_A_43_count_one_bit_fu_248_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln669_reg_1043),to_integer(unsigned('0' & large_count_2cast56_fu_726_p1(8-1 downto 0)))));
    counter_A_44_count_one_bit_fu_258_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln671_reg_1053),to_integer(unsigned('0' & large_count_2cast58_fu_746_p1(8-1 downto 0)))));
    counter_A_45_count_one_bit_fu_268_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln673_reg_1064),to_integer(unsigned('0' & large_count_2cast60_fu_766_p1(8-1 downto 0)))));
    counter_A_46_count_one_bit_fu_278_input_seq_val <= std_logic_vector(shift_left(unsigned(shl_ln675_reg_1076),to_integer(unsigned('0' & large_count_2cast62_fu_786_p1(8-1 downto 0)))));
    counter_A_6_count_one_bit_fu_188_input_seq_val <= std_logic_vector(shift_left(unsigned(DNA_shl_three_read_reg_986),to_integer(unsigned('0' & large_countcast45_fu_453_p1(8-1 downto 0)))));
    global_count_1_fu_833_p3 <= (xor_ln660_fu_828_p2 & trunc_ln660_2_reg_1099);
    global_count_fu_944_p2 <= std_logic_vector(unsigned(add_ln660_1_fu_938_p2) + unsigned(global_count_1_fu_833_p3));
    icmp_ln318_10_fu_529_p2 <= "1" when (unsigned(counter_A_2_count_one_bit_fu_178_ap_return) > unsigned(counter_A_35_count_one_bit_fu_173_ap_return)) else "0";
    icmp_ln318_11_fu_543_p2 <= "1" when (unsigned(max_17_fu_535_p3) < unsigned(counter_A_36_count_one_bit_fu_183_ap_return)) else "0";
    icmp_ln318_12_fu_557_p2 <= "1" when (unsigned(max_19_fu_549_p3) < unsigned(counter_A_6_count_one_bit_fu_188_ap_return)) else "0";
    icmp_ln318_13_fu_571_p2 <= "1" when (unsigned(max_20_fu_563_p3) < unsigned(counter_A_37_count_one_bit_fu_193_ap_return)) else "0";
    icmp_ln318_14_fu_585_p2 <= "1" when (unsigned(max_22_fu_577_p3) < unsigned(counter_A_10_count_one_bit_fu_198_ap_return)) else "0";
    icmp_ln318_15_fu_599_p2 <= "1" when (unsigned(max_23_reg_1088) < unsigned(counter_A_38_reg_1082)) else "0";
    icmp_ln318_16_fu_609_p2 <= "1" when (unsigned(max_25_fu_603_p3) < unsigned(counter_A_12_count_one_bit_fu_208_ap_return)) else "0";
    icmp_ln318_17_fu_623_p2 <= "1" when (unsigned(max_26_fu_615_p3) < unsigned(counter_A_39_count_one_bit_fu_213_ap_return)) else "0";
    icmp_ln318_18_fu_637_p2 <= "1" when (unsigned(max_28_fu_629_p3) < unsigned(counter_A_14_count_one_bit_fu_218_ap_return)) else "0";
    icmp_ln318_19_fu_651_p2 <= "1" when (unsigned(max_29_fu_643_p3) < unsigned(counter_A_40_count_one_bit_fu_223_ap_return)) else "0";
    icmp_ln318_1_fu_297_p2 <= "1" when (unsigned(max_1_fu_289_p3) < unsigned(counter_A_30_count_one_bit_fu_120_ap_return)) else "0";
    icmp_ln318_20_fu_796_p2 <= "1" when (unsigned(counter_A_16_count_one_bit_fu_233_ap_return) > unsigned(counter_A_41_count_one_bit_fu_228_ap_return)) else "0";
    icmp_ln318_21_fu_810_p2 <= "1" when (unsigned(max_33_fu_802_p3) < unsigned(counter_A_42_count_one_bit_fu_238_ap_return)) else "0";
    icmp_ln318_22_fu_840_p2 <= "1" when (unsigned(max_35_reg_1151) < unsigned(counter_A_18_reg_1104)) else "0";
    icmp_ln318_23_fu_850_p2 <= "1" when (unsigned(max_36_fu_844_p3) < unsigned(counter_A_43_reg_1110)) else "0";
    icmp_ln318_24_fu_862_p2 <= "1" when (unsigned(max_38_fu_855_p3) < unsigned(counter_A_20_reg_1116)) else "0";
    icmp_ln318_25_fu_874_p2 <= "1" when (unsigned(max_39_fu_867_p3) < unsigned(counter_A_44_reg_1122)) else "0";
    icmp_ln318_26_fu_886_p2 <= "1" when (unsigned(max_41_fu_879_p3) < unsigned(counter_A_22_reg_1128)) else "0";
    icmp_ln318_27_fu_898_p2 <= "1" when (unsigned(max_42_fu_891_p3) < unsigned(counter_A_45_reg_1134)) else "0";
    icmp_ln318_28_fu_910_p2 <= "1" when (unsigned(max_44_fu_903_p3) < unsigned(counter_A_24_reg_1140)) else "0";
    icmp_ln318_29_fu_922_p2 <= "1" when (unsigned(max_45_fu_915_p3) < unsigned(counter_A_46_reg_1146)) else "0";
    icmp_ln318_2_fu_311_p2 <= "1" when (unsigned(max_3_fu_303_p3) < unsigned(counter_A_3_count_one_bit_fu_126_ap_return)) else "0";
    icmp_ln318_3_fu_325_p2 <= "1" when (unsigned(max_4_fu_317_p3) < unsigned(counter_A_31_count_one_bit_fu_132_ap_return)) else "0";
    icmp_ln318_4_fu_339_p2 <= "1" when (unsigned(max_6_fu_331_p3) < unsigned(counter_A_5_count_one_bit_fu_138_ap_return)) else "0";
    icmp_ln318_5_fu_353_p2 <= "1" when (unsigned(max_7_fu_345_p3) < unsigned(counter_A_32_count_one_bit_fu_144_ap_return)) else "0";
    icmp_ln318_6_fu_367_p2 <= "1" when (unsigned(max_9_fu_359_p3) < unsigned(counter_A_7_count_one_bit_fu_150_ap_return)) else "0";
    icmp_ln318_7_fu_381_p2 <= "1" when (unsigned(max_10_fu_373_p3) < unsigned(counter_A_33_count_one_bit_fu_156_ap_return)) else "0";
    icmp_ln318_8_fu_395_p2 <= "1" when (unsigned(max_12_reg_1012) < unsigned(counter_A_9_reg_1006)) else "0";
    icmp_ln318_9_fu_405_p2 <= "1" when (unsigned(max_13_fu_399_p3) < unsigned(counter_A_34_count_one_bit_fu_168_ap_return)) else "0";
    icmp_ln318_fu_283_p2 <= "1" when (unsigned(counter_A_1_count_one_bit_fu_114_ap_return) > unsigned(counter_A_count_one_bit_fu_108_ap_return)) else "0";
    large_count_2_fu_657_p3 <= 
        counter_A_40_count_one_bit_fu_223_ap_return when (icmp_ln318_19_fu_651_p2(0) = '1') else 
        max_29_fu_643_p3;
    large_count_2cast53_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast54_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast55_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast56_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast57_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast58_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast59_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast60_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast61_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast62_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_2cast_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_2_fu_657_p3),8));
    large_count_fu_411_p3 <= 
        counter_A_34_count_one_bit_fu_168_ap_return when (icmp_ln318_9_fu_405_p2(0) = '1') else 
        max_13_fu_399_p3;
    large_countcast43_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast44_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast45_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast46_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast47_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast48_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast49_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast50_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast51_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast52_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    large_countcast_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(large_count_fu_411_p3),8));
    max_10_fu_373_p3 <= 
        counter_A_7_count_one_bit_fu_150_ap_return when (icmp_ln318_6_fu_367_p2(0) = '1') else 
        max_9_fu_359_p3;
    max_12_fu_387_p3 <= 
        counter_A_33_count_one_bit_fu_156_ap_return when (icmp_ln318_7_fu_381_p2(0) = '1') else 
        max_10_fu_373_p3;
    max_13_fu_399_p3 <= 
        counter_A_9_reg_1006 when (icmp_ln318_8_fu_395_p2(0) = '1') else 
        max_12_reg_1012;
    max_17_fu_535_p3 <= 
        counter_A_2_count_one_bit_fu_178_ap_return when (icmp_ln318_10_fu_529_p2(0) = '1') else 
        counter_A_35_count_one_bit_fu_173_ap_return;
    max_19_fu_549_p3 <= 
        counter_A_36_count_one_bit_fu_183_ap_return when (icmp_ln318_11_fu_543_p2(0) = '1') else 
        max_17_fu_535_p3;
    max_1_fu_289_p3 <= 
        counter_A_1_count_one_bit_fu_114_ap_return when (icmp_ln318_fu_283_p2(0) = '1') else 
        counter_A_count_one_bit_fu_108_ap_return;
    max_20_fu_563_p3 <= 
        counter_A_6_count_one_bit_fu_188_ap_return when (icmp_ln318_12_fu_557_p2(0) = '1') else 
        max_19_fu_549_p3;
    max_22_fu_577_p3 <= 
        counter_A_37_count_one_bit_fu_193_ap_return when (icmp_ln318_13_fu_571_p2(0) = '1') else 
        max_20_fu_563_p3;
    max_23_fu_591_p3 <= 
        counter_A_10_count_one_bit_fu_198_ap_return when (icmp_ln318_14_fu_585_p2(0) = '1') else 
        max_22_fu_577_p3;
    max_25_fu_603_p3 <= 
        counter_A_38_reg_1082 when (icmp_ln318_15_fu_599_p2(0) = '1') else 
        max_23_reg_1088;
    max_26_fu_615_p3 <= 
        counter_A_12_count_one_bit_fu_208_ap_return when (icmp_ln318_16_fu_609_p2(0) = '1') else 
        max_25_fu_603_p3;
    max_28_fu_629_p3 <= 
        counter_A_39_count_one_bit_fu_213_ap_return when (icmp_ln318_17_fu_623_p2(0) = '1') else 
        max_26_fu_615_p3;
    max_29_fu_643_p3 <= 
        counter_A_14_count_one_bit_fu_218_ap_return when (icmp_ln318_18_fu_637_p2(0) = '1') else 
        max_28_fu_629_p3;
    max_33_fu_802_p3 <= 
        counter_A_16_count_one_bit_fu_233_ap_return when (icmp_ln318_20_fu_796_p2(0) = '1') else 
        counter_A_41_count_one_bit_fu_228_ap_return;
    max_35_fu_816_p3 <= 
        counter_A_42_count_one_bit_fu_238_ap_return when (icmp_ln318_21_fu_810_p2(0) = '1') else 
        max_33_fu_802_p3;
    max_36_fu_844_p3 <= 
        counter_A_18_reg_1104 when (icmp_ln318_22_fu_840_p2(0) = '1') else 
        max_35_reg_1151;
    max_38_fu_855_p3 <= 
        counter_A_43_reg_1110 when (icmp_ln318_23_fu_850_p2(0) = '1') else 
        max_36_fu_844_p3;
    max_39_fu_867_p3 <= 
        counter_A_20_reg_1116 when (icmp_ln318_24_fu_862_p2(0) = '1') else 
        max_38_fu_855_p3;
    max_3_fu_303_p3 <= 
        counter_A_30_count_one_bit_fu_120_ap_return when (icmp_ln318_1_fu_297_p2(0) = '1') else 
        max_1_fu_289_p3;
    max_41_fu_879_p3 <= 
        counter_A_44_reg_1122 when (icmp_ln318_25_fu_874_p2(0) = '1') else 
        max_39_fu_867_p3;
    max_42_fu_891_p3 <= 
        counter_A_22_reg_1128 when (icmp_ln318_26_fu_886_p2(0) = '1') else 
        max_41_fu_879_p3;
    max_44_fu_903_p3 <= 
        counter_A_45_reg_1134 when (icmp_ln318_27_fu_898_p2(0) = '1') else 
        max_42_fu_891_p3;
    max_45_fu_915_p3 <= 
        counter_A_24_reg_1140 when (icmp_ln318_28_fu_910_p2(0) = '1') else 
        max_44_fu_903_p3;
    max_4_fu_317_p3 <= 
        counter_A_3_count_one_bit_fu_126_ap_return when (icmp_ln318_2_fu_311_p2(0) = '1') else 
        max_3_fu_303_p3;
    max_6_fu_331_p3 <= 
        counter_A_31_count_one_bit_fu_132_ap_return when (icmp_ln318_3_fu_325_p2(0) = '1') else 
        max_4_fu_317_p3;
    max_7_fu_345_p3 <= 
        counter_A_5_count_one_bit_fu_138_ap_return when (icmp_ln318_4_fu_339_p2(0) = '1') else 
        max_6_fu_331_p3;
    max_9_fu_359_p3 <= 
        counter_A_32_count_one_bit_fu_144_ap_return when (icmp_ln318_5_fu_353_p2(0) = '1') else 
        max_7_fu_345_p3;
    select_ln318_fu_931_p3 <= 
        trunc_ln318_reg_1157 when (icmp_ln318_29_fu_922_p2(0) = '1') else 
        trunc_ln318_1_fu_927_p1;
    shl_ln665_fu_427_p2 <= std_logic_vector(shift_left(unsigned(DNA_nsh_read_reg_1001),to_integer(unsigned('0' & large_countcast_fu_423_p1(8-1 downto 0)))));
    shl_ln666_fu_437_p2 <= std_logic_vector(shift_left(unsigned(DNA_shl_one_read_reg_996),to_integer(unsigned('0' & large_countcast43_fu_433_p1(8-1 downto 0)))));
    shl_ln667_fu_447_p2 <= std_logic_vector(shift_left(unsigned(DNA_shl_two_read_reg_991),to_integer(unsigned('0' & large_countcast44_fu_443_p1(8-1 downto 0)))));
    shl_ln668_fu_457_p2 <= std_logic_vector(shift_left(unsigned(DNA_shl_three_read_reg_986),to_integer(unsigned('0' & large_countcast45_fu_453_p1(8-1 downto 0)))));
    shl_ln669_fu_467_p2 <= std_logic_vector(shift_left(unsigned(DNA_shl_four_read_reg_981),to_integer(unsigned('0' & large_countcast46_fu_463_p1(8-1 downto 0)))));
    shl_ln670_fu_477_p2 <= std_logic_vector(shift_left(unsigned(DNA_shl_five_read_reg_976),to_integer(unsigned('0' & large_countcast47_fu_473_p1(8-1 downto 0)))));
    shl_ln671_fu_487_p2 <= std_logic_vector(shift_left(unsigned(DNA_shr_one_read_reg_971),to_integer(unsigned('0' & large_countcast48_fu_483_p1(8-1 downto 0)))));
    shl_ln672_fu_497_p2 <= std_logic_vector(shift_left(unsigned(DNA_shr_two_read_reg_966),to_integer(unsigned('0' & large_countcast49_fu_493_p1(8-1 downto 0)))));
    shl_ln673_fu_506_p2 <= std_logic_vector(shift_left(unsigned(DNA_shr_three_read_reg_961),to_integer(unsigned('0' & large_countcast50_fu_502_p1(8-1 downto 0)))));
    shl_ln674_fu_515_p2 <= std_logic_vector(shift_left(unsigned(DNA_shr_four_read_reg_956),to_integer(unsigned('0' & large_countcast51_fu_511_p1(8-1 downto 0)))));
    shl_ln675_fu_524_p2 <= std_logic_vector(shift_left(unsigned(DNA_shr_five_read_reg_950),to_integer(unsigned('0' & large_countcast52_fu_520_p1(8-1 downto 0)))));
    trunc_ln318_1_fu_927_p1 <= max_45_fu_915_p3(2 - 1 downto 0);
    trunc_ln318_fu_824_p1 <= counter_A_46_count_one_bit_fu_278_ap_return(2 - 1 downto 0);
    trunc_ln660_1_fu_665_p1 <= large_count_2_fu_657_p3(2 - 1 downto 0);
    trunc_ln660_2_fu_682_p1 <= add_ln660_fu_669_p2(1 - 1 downto 0);
    trunc_ln660_fu_419_p1 <= large_count_fu_411_p3(2 - 1 downto 0);
    xor_ln660_fu_828_p2 <= (bit_sel_reg_1094 xor ap_const_lv1_1);
end behav;
