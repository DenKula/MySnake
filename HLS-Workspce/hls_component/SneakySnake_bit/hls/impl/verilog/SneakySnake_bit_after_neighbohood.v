// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module SneakySnake_bit_after_neighbohood (
        ap_clk,
        ap_rst,
        DNA_nsh,
        DNA_shl_one,
        DNA_shl_two,
        DNA_shl_three,
        DNA_shl_four,
        DNA_shl_five,
        DNA_shr_one,
        DNA_shr_two,
        DNA_shr_three,
        DNA_shr_four,
        DNA_shr_five,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] DNA_nsh;
input  [7:0] DNA_shl_one;
input  [7:0] DNA_shl_two;
input  [7:0] DNA_shl_three;
input  [7:0] DNA_shl_four;
input  [7:0] DNA_shl_five;
input  [7:0] DNA_shr_one;
input  [7:0] DNA_shr_two;
input  [7:0] DNA_shr_three;
input  [7:0] DNA_shr_four;
input  [7:0] DNA_shr_five;
output  [1:0] ap_return;
input   ap_ce;

reg[1:0] ap_return;

reg   [7:0] DNA_shr_five_read_reg_950;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] DNA_shr_four_read_reg_956;
reg   [7:0] DNA_shr_three_read_reg_961;
reg   [7:0] DNA_shr_two_read_reg_966;
reg   [7:0] DNA_shr_one_read_reg_971;
reg   [7:0] DNA_shl_five_read_reg_976;
reg   [7:0] DNA_shl_four_read_reg_981;
reg   [7:0] DNA_shl_three_read_reg_986;
reg   [7:0] DNA_shl_two_read_reg_991;
reg   [7:0] DNA_shl_one_read_reg_996;
reg   [7:0] DNA_nsh_read_reg_1001;
wire   [3:0] counter_A_9_count_one_bit_fu_162_ap_return;
reg   [3:0] counter_A_9_reg_1006;
wire    ap_block_pp0_stage0_11001_ignoreCallOp25;
wire   [3:0] max_12_fu_387_p3;
reg   [3:0] max_12_reg_1012;
wire   [1:0] trunc_ln660_fu_419_p1;
reg   [1:0] trunc_ln660_reg_1018;
wire   [7:0] shl_ln665_fu_427_p2;
reg   [7:0] shl_ln665_reg_1023;
wire   [7:0] shl_ln666_fu_437_p2;
reg   [7:0] shl_ln666_reg_1028;
wire   [7:0] shl_ln667_fu_447_p2;
reg   [7:0] shl_ln667_reg_1033;
wire   [7:0] shl_ln668_fu_457_p2;
reg   [7:0] shl_ln668_reg_1038;
wire   [7:0] shl_ln669_fu_467_p2;
reg   [7:0] shl_ln669_reg_1043;
wire   [7:0] shl_ln670_fu_477_p2;
reg   [7:0] shl_ln670_reg_1048;
wire   [7:0] shl_ln671_fu_487_p2;
reg   [7:0] shl_ln671_reg_1053;
wire   [7:0] shl_ln672_fu_497_p2;
reg   [7:0] shl_ln672_reg_1058;
wire   [7:0] shl_ln673_fu_506_p2;
reg   [7:0] shl_ln673_reg_1064;
wire   [7:0] shl_ln674_fu_515_p2;
reg   [7:0] shl_ln674_reg_1070;
wire   [7:0] shl_ln675_fu_524_p2;
reg   [7:0] shl_ln675_reg_1076;
wire   [3:0] counter_A_38_count_one_bit_fu_203_ap_return;
reg   [3:0] counter_A_38_reg_1082;
wire    ap_block_pp0_stage0_11001_ignoreCallOp76;
wire   [3:0] max_23_fu_591_p3;
reg   [3:0] max_23_reg_1088;
reg   [0:0] bit_sel_reg_1094;
wire   [0:0] trunc_ln660_2_fu_682_p1;
reg   [0:0] trunc_ln660_2_reg_1099;
wire   [3:0] counter_A_18_count_one_bit_fu_243_ap_return;
reg   [3:0] counter_A_18_reg_1104;
wire    ap_block_pp0_stage0_11001_ignoreCallOp130;
wire   [3:0] counter_A_43_count_one_bit_fu_248_ap_return;
reg   [3:0] counter_A_43_reg_1110;
wire    ap_block_pp0_stage0_11001_ignoreCallOp131;
wire   [3:0] counter_A_20_count_one_bit_fu_253_ap_return;
reg   [3:0] counter_A_20_reg_1116;
wire    ap_block_pp0_stage0_11001_ignoreCallOp132;
wire   [3:0] counter_A_44_count_one_bit_fu_258_ap_return;
reg   [3:0] counter_A_44_reg_1122;
wire    ap_block_pp0_stage0_11001_ignoreCallOp133;
wire   [3:0] counter_A_22_count_one_bit_fu_263_ap_return;
reg   [3:0] counter_A_22_reg_1128;
wire    ap_block_pp0_stage0_11001_ignoreCallOp134;
wire   [3:0] counter_A_45_count_one_bit_fu_268_ap_return;
reg   [3:0] counter_A_45_reg_1134;
wire    ap_block_pp0_stage0_11001_ignoreCallOp135;
wire   [3:0] counter_A_24_count_one_bit_fu_273_ap_return;
reg   [3:0] counter_A_24_reg_1140;
wire    ap_block_pp0_stage0_11001_ignoreCallOp136;
wire   [3:0] counter_A_46_count_one_bit_fu_278_ap_return;
reg   [3:0] counter_A_46_reg_1146;
wire    ap_block_pp0_stage0_11001_ignoreCallOp137;
wire   [3:0] max_35_fu_816_p3;
reg   [3:0] max_35_reg_1151;
wire   [1:0] trunc_ln318_fu_824_p1;
reg   [1:0] trunc_ln318_reg_1157;
wire    counter_A_count_one_bit_fu_108_ap_ready;
wire   [3:0] counter_A_count_one_bit_fu_108_ap_return;
wire    counter_A_1_count_one_bit_fu_114_ap_ready;
wire   [3:0] counter_A_1_count_one_bit_fu_114_ap_return;
wire    counter_A_30_count_one_bit_fu_120_ap_ready;
wire   [3:0] counter_A_30_count_one_bit_fu_120_ap_return;
wire    counter_A_3_count_one_bit_fu_126_ap_ready;
wire   [3:0] counter_A_3_count_one_bit_fu_126_ap_return;
wire    counter_A_31_count_one_bit_fu_132_ap_ready;
wire   [3:0] counter_A_31_count_one_bit_fu_132_ap_return;
wire    counter_A_5_count_one_bit_fu_138_ap_ready;
wire   [3:0] counter_A_5_count_one_bit_fu_138_ap_return;
wire    counter_A_32_count_one_bit_fu_144_ap_ready;
wire   [3:0] counter_A_32_count_one_bit_fu_144_ap_return;
wire    counter_A_7_count_one_bit_fu_150_ap_ready;
wire   [3:0] counter_A_7_count_one_bit_fu_150_ap_return;
wire    counter_A_33_count_one_bit_fu_156_ap_ready;
wire   [3:0] counter_A_33_count_one_bit_fu_156_ap_return;
wire    counter_A_9_count_one_bit_fu_162_ap_ready;
wire    counter_A_34_count_one_bit_fu_168_ap_ready;
wire   [3:0] counter_A_34_count_one_bit_fu_168_ap_return;
wire    counter_A_35_count_one_bit_fu_173_ap_ready;
wire   [7:0] counter_A_35_count_one_bit_fu_173_input_seq_val;
wire   [3:0] counter_A_35_count_one_bit_fu_173_ap_return;
wire    counter_A_2_count_one_bit_fu_178_ap_ready;
wire   [7:0] counter_A_2_count_one_bit_fu_178_input_seq_val;
wire   [3:0] counter_A_2_count_one_bit_fu_178_ap_return;
wire    counter_A_36_count_one_bit_fu_183_ap_ready;
wire   [7:0] counter_A_36_count_one_bit_fu_183_input_seq_val;
wire   [3:0] counter_A_36_count_one_bit_fu_183_ap_return;
wire    counter_A_6_count_one_bit_fu_188_ap_ready;
wire   [7:0] counter_A_6_count_one_bit_fu_188_input_seq_val;
wire   [3:0] counter_A_6_count_one_bit_fu_188_ap_return;
wire    counter_A_37_count_one_bit_fu_193_ap_ready;
wire   [7:0] counter_A_37_count_one_bit_fu_193_input_seq_val;
wire   [3:0] counter_A_37_count_one_bit_fu_193_ap_return;
wire    counter_A_10_count_one_bit_fu_198_ap_ready;
wire   [7:0] counter_A_10_count_one_bit_fu_198_input_seq_val;
wire   [3:0] counter_A_10_count_one_bit_fu_198_ap_return;
wire    counter_A_38_count_one_bit_fu_203_ap_ready;
wire   [7:0] counter_A_38_count_one_bit_fu_203_input_seq_val;
wire    counter_A_12_count_one_bit_fu_208_ap_ready;
wire   [3:0] counter_A_12_count_one_bit_fu_208_ap_return;
wire    counter_A_39_count_one_bit_fu_213_ap_ready;
wire   [3:0] counter_A_39_count_one_bit_fu_213_ap_return;
wire    counter_A_14_count_one_bit_fu_218_ap_ready;
wire   [3:0] counter_A_14_count_one_bit_fu_218_ap_return;
wire    counter_A_40_count_one_bit_fu_223_ap_ready;
wire   [3:0] counter_A_40_count_one_bit_fu_223_ap_return;
wire    counter_A_41_count_one_bit_fu_228_ap_ready;
wire   [7:0] counter_A_41_count_one_bit_fu_228_input_seq_val;
wire   [3:0] counter_A_41_count_one_bit_fu_228_ap_return;
wire    counter_A_16_count_one_bit_fu_233_ap_ready;
wire   [7:0] counter_A_16_count_one_bit_fu_233_input_seq_val;
wire   [3:0] counter_A_16_count_one_bit_fu_233_ap_return;
wire    counter_A_42_count_one_bit_fu_238_ap_ready;
wire   [7:0] counter_A_42_count_one_bit_fu_238_input_seq_val;
wire   [3:0] counter_A_42_count_one_bit_fu_238_ap_return;
wire    counter_A_18_count_one_bit_fu_243_ap_ready;
wire   [7:0] counter_A_18_count_one_bit_fu_243_input_seq_val;
wire    counter_A_43_count_one_bit_fu_248_ap_ready;
wire   [7:0] counter_A_43_count_one_bit_fu_248_input_seq_val;
wire    counter_A_20_count_one_bit_fu_253_ap_ready;
wire   [7:0] counter_A_20_count_one_bit_fu_253_input_seq_val;
wire    counter_A_44_count_one_bit_fu_258_ap_ready;
wire   [7:0] counter_A_44_count_one_bit_fu_258_input_seq_val;
wire    counter_A_22_count_one_bit_fu_263_ap_ready;
wire   [7:0] counter_A_22_count_one_bit_fu_263_input_seq_val;
wire    counter_A_45_count_one_bit_fu_268_ap_ready;
wire   [7:0] counter_A_45_count_one_bit_fu_268_input_seq_val;
wire    counter_A_24_count_one_bit_fu_273_ap_ready;
wire   [7:0] counter_A_24_count_one_bit_fu_273_input_seq_val;
wire    counter_A_46_count_one_bit_fu_278_ap_ready;
wire   [7:0] counter_A_46_count_one_bit_fu_278_input_seq_val;
wire    ap_block_pp0_stage0_ignoreCallOp16;
wire    ap_block_pp0_stage0_ignoreCallOp17;
wire    ap_block_pp0_stage0_ignoreCallOp18;
wire    ap_block_pp0_stage0_ignoreCallOp19;
wire    ap_block_pp0_stage0_ignoreCallOp20;
wire    ap_block_pp0_stage0_ignoreCallOp21;
wire    ap_block_pp0_stage0_ignoreCallOp22;
wire    ap_block_pp0_stage0_ignoreCallOp23;
wire    ap_block_pp0_stage0_ignoreCallOp24;
wire    ap_block_pp0_stage0_ignoreCallOp25;
wire    ap_block_pp0_stage0_ignoreCallOp42;
wire    ap_block_pp0_stage0_ignoreCallOp70;
wire    ap_block_pp0_stage0_ignoreCallOp71;
wire    ap_block_pp0_stage0_ignoreCallOp72;
wire    ap_block_pp0_stage0_ignoreCallOp73;
wire    ap_block_pp0_stage0_ignoreCallOp74;
wire    ap_block_pp0_stage0_ignoreCallOp75;
wire    ap_block_pp0_stage0_ignoreCallOp76;
wire    ap_block_pp0_stage0_ignoreCallOp87;
wire    ap_block_pp0_stage0_ignoreCallOp88;
wire    ap_block_pp0_stage0_ignoreCallOp89;
wire    ap_block_pp0_stage0_ignoreCallOp90;
wire    ap_block_pp0_stage0_ignoreCallOp127;
wire    ap_block_pp0_stage0_ignoreCallOp128;
wire    ap_block_pp0_stage0_ignoreCallOp129;
wire    ap_block_pp0_stage0_ignoreCallOp130;
wire    ap_block_pp0_stage0_ignoreCallOp131;
wire    ap_block_pp0_stage0_ignoreCallOp132;
wire    ap_block_pp0_stage0_ignoreCallOp133;
wire    ap_block_pp0_stage0_ignoreCallOp134;
wire    ap_block_pp0_stage0_ignoreCallOp135;
wire    ap_block_pp0_stage0_ignoreCallOp136;
wire    ap_block_pp0_stage0_ignoreCallOp137;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln318_fu_283_p2;
wire   [3:0] max_1_fu_289_p3;
wire   [0:0] icmp_ln318_1_fu_297_p2;
wire   [3:0] max_3_fu_303_p3;
wire   [0:0] icmp_ln318_2_fu_311_p2;
wire   [3:0] max_4_fu_317_p3;
wire   [0:0] icmp_ln318_3_fu_325_p2;
wire   [3:0] max_6_fu_331_p3;
wire   [0:0] icmp_ln318_4_fu_339_p2;
wire   [3:0] max_7_fu_345_p3;
wire   [0:0] icmp_ln318_5_fu_353_p2;
wire   [3:0] max_9_fu_359_p3;
wire   [0:0] icmp_ln318_6_fu_367_p2;
wire   [3:0] max_10_fu_373_p3;
wire   [0:0] icmp_ln318_7_fu_381_p2;
wire   [0:0] icmp_ln318_8_fu_395_p2;
wire   [3:0] max_13_fu_399_p3;
wire   [0:0] icmp_ln318_9_fu_405_p2;
wire   [3:0] large_count_fu_411_p3;
wire   [7:0] large_countcast_fu_423_p1;
wire   [7:0] large_countcast43_fu_433_p1;
wire   [7:0] large_countcast44_fu_443_p1;
wire   [7:0] large_countcast45_fu_453_p1;
wire   [7:0] large_countcast46_fu_463_p1;
wire   [7:0] large_countcast47_fu_473_p1;
wire   [7:0] large_countcast48_fu_483_p1;
wire   [7:0] large_countcast49_fu_493_p1;
wire   [7:0] large_countcast50_fu_502_p1;
wire   [7:0] large_countcast51_fu_511_p1;
wire   [7:0] large_countcast52_fu_520_p1;
wire   [0:0] icmp_ln318_10_fu_529_p2;
wire   [3:0] max_17_fu_535_p3;
wire   [0:0] icmp_ln318_11_fu_543_p2;
wire   [3:0] max_19_fu_549_p3;
wire   [0:0] icmp_ln318_12_fu_557_p2;
wire   [3:0] max_20_fu_563_p3;
wire   [0:0] icmp_ln318_13_fu_571_p2;
wire   [3:0] max_22_fu_577_p3;
wire   [0:0] icmp_ln318_14_fu_585_p2;
wire   [0:0] icmp_ln318_15_fu_599_p2;
wire   [3:0] max_25_fu_603_p3;
wire   [0:0] icmp_ln318_16_fu_609_p2;
wire   [3:0] max_26_fu_615_p3;
wire   [0:0] icmp_ln318_17_fu_623_p2;
wire   [3:0] max_28_fu_629_p3;
wire   [0:0] icmp_ln318_18_fu_637_p2;
wire   [3:0] max_29_fu_643_p3;
wire   [0:0] icmp_ln318_19_fu_651_p2;
wire   [3:0] large_count_2_fu_657_p3;
wire   [1:0] trunc_ln660_1_fu_665_p1;
wire   [1:0] add_ln660_fu_669_p2;
wire   [7:0] large_count_2cast_fu_686_p1;
wire   [7:0] large_count_2cast53_fu_696_p1;
wire   [7:0] large_count_2cast54_fu_706_p1;
wire   [7:0] large_count_2cast55_fu_716_p1;
wire   [7:0] large_count_2cast56_fu_726_p1;
wire   [7:0] large_count_2cast57_fu_736_p1;
wire   [7:0] large_count_2cast58_fu_746_p1;
wire   [7:0] large_count_2cast59_fu_756_p1;
wire   [7:0] large_count_2cast60_fu_766_p1;
wire   [7:0] large_count_2cast61_fu_776_p1;
wire   [7:0] large_count_2cast62_fu_786_p1;
wire   [0:0] icmp_ln318_20_fu_796_p2;
wire   [3:0] max_33_fu_802_p3;
wire   [0:0] icmp_ln318_21_fu_810_p2;
wire   [0:0] xor_ln660_fu_828_p2;
wire   [0:0] icmp_ln318_22_fu_840_p2;
wire   [3:0] max_36_fu_844_p3;
wire   [0:0] icmp_ln318_23_fu_850_p2;
wire   [3:0] max_38_fu_855_p3;
wire   [0:0] icmp_ln318_24_fu_862_p2;
wire   [3:0] max_39_fu_867_p3;
wire   [0:0] icmp_ln318_25_fu_874_p2;
wire   [3:0] max_41_fu_879_p3;
wire   [0:0] icmp_ln318_26_fu_886_p2;
wire   [3:0] max_42_fu_891_p3;
wire   [0:0] icmp_ln318_27_fu_898_p2;
wire   [3:0] max_44_fu_903_p3;
wire   [0:0] icmp_ln318_28_fu_910_p2;
wire   [3:0] max_45_fu_915_p3;
wire   [0:0] icmp_ln318_29_fu_922_p2;
wire   [1:0] trunc_ln318_1_fu_927_p1;
wire   [1:0] select_ln318_fu_931_p3;
wire   [1:0] add_ln660_1_fu_938_p2;
wire   [1:0] global_count_1_fu_833_p3;
wire   [1:0] global_count_fu_944_p2;
reg    ap_ce_reg;
reg   [7:0] DNA_nsh_int_reg;
reg   [7:0] DNA_shl_one_int_reg;
reg   [7:0] DNA_shl_two_int_reg;
reg   [7:0] DNA_shl_three_int_reg;
reg   [7:0] DNA_shl_four_int_reg;
reg   [7:0] DNA_shl_five_int_reg;
reg   [7:0] DNA_shr_one_int_reg;
reg   [7:0] DNA_shr_two_int_reg;
reg   [7:0] DNA_shr_three_int_reg;
reg   [7:0] DNA_shr_four_int_reg;
reg   [7:0] DNA_shr_five_int_reg;
reg   [1:0] ap_return_int_reg;

SneakySnake_bit_count_one_bit counter_A_count_one_bit_fu_108(
    .ap_ready(counter_A_count_one_bit_fu_108_ap_ready),
    .input_seq_val(DNA_nsh_int_reg),
    .ap_return(counter_A_count_one_bit_fu_108_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_1_count_one_bit_fu_114(
    .ap_ready(counter_A_1_count_one_bit_fu_114_ap_ready),
    .input_seq_val(DNA_shl_one_int_reg),
    .ap_return(counter_A_1_count_one_bit_fu_114_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_30_count_one_bit_fu_120(
    .ap_ready(counter_A_30_count_one_bit_fu_120_ap_ready),
    .input_seq_val(DNA_shl_two_int_reg),
    .ap_return(counter_A_30_count_one_bit_fu_120_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_3_count_one_bit_fu_126(
    .ap_ready(counter_A_3_count_one_bit_fu_126_ap_ready),
    .input_seq_val(DNA_shl_three_int_reg),
    .ap_return(counter_A_3_count_one_bit_fu_126_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_31_count_one_bit_fu_132(
    .ap_ready(counter_A_31_count_one_bit_fu_132_ap_ready),
    .input_seq_val(DNA_shl_four_int_reg),
    .ap_return(counter_A_31_count_one_bit_fu_132_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_5_count_one_bit_fu_138(
    .ap_ready(counter_A_5_count_one_bit_fu_138_ap_ready),
    .input_seq_val(DNA_shl_five_int_reg),
    .ap_return(counter_A_5_count_one_bit_fu_138_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_32_count_one_bit_fu_144(
    .ap_ready(counter_A_32_count_one_bit_fu_144_ap_ready),
    .input_seq_val(DNA_shr_one_int_reg),
    .ap_return(counter_A_32_count_one_bit_fu_144_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_7_count_one_bit_fu_150(
    .ap_ready(counter_A_7_count_one_bit_fu_150_ap_ready),
    .input_seq_val(DNA_shr_two_int_reg),
    .ap_return(counter_A_7_count_one_bit_fu_150_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_33_count_one_bit_fu_156(
    .ap_ready(counter_A_33_count_one_bit_fu_156_ap_ready),
    .input_seq_val(DNA_shr_three_int_reg),
    .ap_return(counter_A_33_count_one_bit_fu_156_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_9_count_one_bit_fu_162(
    .ap_ready(counter_A_9_count_one_bit_fu_162_ap_ready),
    .input_seq_val(DNA_shr_four_int_reg),
    .ap_return(counter_A_9_count_one_bit_fu_162_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_34_count_one_bit_fu_168(
    .ap_ready(counter_A_34_count_one_bit_fu_168_ap_ready),
    .input_seq_val(DNA_shr_five_read_reg_950),
    .ap_return(counter_A_34_count_one_bit_fu_168_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_35_count_one_bit_fu_173(
    .ap_ready(counter_A_35_count_one_bit_fu_173_ap_ready),
    .input_seq_val(counter_A_35_count_one_bit_fu_173_input_seq_val),
    .ap_return(counter_A_35_count_one_bit_fu_173_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_2_count_one_bit_fu_178(
    .ap_ready(counter_A_2_count_one_bit_fu_178_ap_ready),
    .input_seq_val(counter_A_2_count_one_bit_fu_178_input_seq_val),
    .ap_return(counter_A_2_count_one_bit_fu_178_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_36_count_one_bit_fu_183(
    .ap_ready(counter_A_36_count_one_bit_fu_183_ap_ready),
    .input_seq_val(counter_A_36_count_one_bit_fu_183_input_seq_val),
    .ap_return(counter_A_36_count_one_bit_fu_183_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_6_count_one_bit_fu_188(
    .ap_ready(counter_A_6_count_one_bit_fu_188_ap_ready),
    .input_seq_val(counter_A_6_count_one_bit_fu_188_input_seq_val),
    .ap_return(counter_A_6_count_one_bit_fu_188_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_37_count_one_bit_fu_193(
    .ap_ready(counter_A_37_count_one_bit_fu_193_ap_ready),
    .input_seq_val(counter_A_37_count_one_bit_fu_193_input_seq_val),
    .ap_return(counter_A_37_count_one_bit_fu_193_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_10_count_one_bit_fu_198(
    .ap_ready(counter_A_10_count_one_bit_fu_198_ap_ready),
    .input_seq_val(counter_A_10_count_one_bit_fu_198_input_seq_val),
    .ap_return(counter_A_10_count_one_bit_fu_198_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_38_count_one_bit_fu_203(
    .ap_ready(counter_A_38_count_one_bit_fu_203_ap_ready),
    .input_seq_val(counter_A_38_count_one_bit_fu_203_input_seq_val),
    .ap_return(counter_A_38_count_one_bit_fu_203_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_12_count_one_bit_fu_208(
    .ap_ready(counter_A_12_count_one_bit_fu_208_ap_ready),
    .input_seq_val(shl_ln672_reg_1058),
    .ap_return(counter_A_12_count_one_bit_fu_208_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_39_count_one_bit_fu_213(
    .ap_ready(counter_A_39_count_one_bit_fu_213_ap_ready),
    .input_seq_val(shl_ln673_reg_1064),
    .ap_return(counter_A_39_count_one_bit_fu_213_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_14_count_one_bit_fu_218(
    .ap_ready(counter_A_14_count_one_bit_fu_218_ap_ready),
    .input_seq_val(shl_ln674_reg_1070),
    .ap_return(counter_A_14_count_one_bit_fu_218_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_40_count_one_bit_fu_223(
    .ap_ready(counter_A_40_count_one_bit_fu_223_ap_ready),
    .input_seq_val(shl_ln675_reg_1076),
    .ap_return(counter_A_40_count_one_bit_fu_223_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_41_count_one_bit_fu_228(
    .ap_ready(counter_A_41_count_one_bit_fu_228_ap_ready),
    .input_seq_val(counter_A_41_count_one_bit_fu_228_input_seq_val),
    .ap_return(counter_A_41_count_one_bit_fu_228_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_16_count_one_bit_fu_233(
    .ap_ready(counter_A_16_count_one_bit_fu_233_ap_ready),
    .input_seq_val(counter_A_16_count_one_bit_fu_233_input_seq_val),
    .ap_return(counter_A_16_count_one_bit_fu_233_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_42_count_one_bit_fu_238(
    .ap_ready(counter_A_42_count_one_bit_fu_238_ap_ready),
    .input_seq_val(counter_A_42_count_one_bit_fu_238_input_seq_val),
    .ap_return(counter_A_42_count_one_bit_fu_238_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_18_count_one_bit_fu_243(
    .ap_ready(counter_A_18_count_one_bit_fu_243_ap_ready),
    .input_seq_val(counter_A_18_count_one_bit_fu_243_input_seq_val),
    .ap_return(counter_A_18_count_one_bit_fu_243_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_43_count_one_bit_fu_248(
    .ap_ready(counter_A_43_count_one_bit_fu_248_ap_ready),
    .input_seq_val(counter_A_43_count_one_bit_fu_248_input_seq_val),
    .ap_return(counter_A_43_count_one_bit_fu_248_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_20_count_one_bit_fu_253(
    .ap_ready(counter_A_20_count_one_bit_fu_253_ap_ready),
    .input_seq_val(counter_A_20_count_one_bit_fu_253_input_seq_val),
    .ap_return(counter_A_20_count_one_bit_fu_253_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_44_count_one_bit_fu_258(
    .ap_ready(counter_A_44_count_one_bit_fu_258_ap_ready),
    .input_seq_val(counter_A_44_count_one_bit_fu_258_input_seq_val),
    .ap_return(counter_A_44_count_one_bit_fu_258_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_22_count_one_bit_fu_263(
    .ap_ready(counter_A_22_count_one_bit_fu_263_ap_ready),
    .input_seq_val(counter_A_22_count_one_bit_fu_263_input_seq_val),
    .ap_return(counter_A_22_count_one_bit_fu_263_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_45_count_one_bit_fu_268(
    .ap_ready(counter_A_45_count_one_bit_fu_268_ap_ready),
    .input_seq_val(counter_A_45_count_one_bit_fu_268_input_seq_val),
    .ap_return(counter_A_45_count_one_bit_fu_268_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_24_count_one_bit_fu_273(
    .ap_ready(counter_A_24_count_one_bit_fu_273_ap_ready),
    .input_seq_val(counter_A_24_count_one_bit_fu_273_input_seq_val),
    .ap_return(counter_A_24_count_one_bit_fu_273_ap_return),
    .ap_rst(ap_rst)
);

SneakySnake_bit_count_one_bit counter_A_46_count_one_bit_fu_278(
    .ap_ready(counter_A_46_count_one_bit_fu_278_ap_ready),
    .input_seq_val(counter_A_46_count_one_bit_fu_278_input_seq_val),
    .ap_return(counter_A_46_count_one_bit_fu_278_ap_return),
    .ap_rst(ap_rst)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        DNA_nsh_int_reg <= DNA_nsh;
        DNA_shl_five_int_reg <= DNA_shl_five;
        DNA_shl_four_int_reg <= DNA_shl_four;
        DNA_shl_one_int_reg <= DNA_shl_one;
        DNA_shl_three_int_reg <= DNA_shl_three;
        DNA_shl_two_int_reg <= DNA_shl_two;
        DNA_shr_five_int_reg <= DNA_shr_five;
        DNA_shr_four_int_reg <= DNA_shr_four;
        DNA_shr_one_int_reg <= DNA_shr_one;
        DNA_shr_three_int_reg <= DNA_shr_three;
        DNA_shr_two_int_reg <= DNA_shr_two;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        DNA_nsh_read_reg_1001 <= DNA_nsh_int_reg;
        DNA_shl_five_read_reg_976 <= DNA_shl_five_int_reg;
        DNA_shl_four_read_reg_981 <= DNA_shl_four_int_reg;
        DNA_shl_one_read_reg_996 <= DNA_shl_one_int_reg;
        DNA_shl_three_read_reg_986 <= DNA_shl_three_int_reg;
        DNA_shl_two_read_reg_991 <= DNA_shl_two_int_reg;
        DNA_shr_five_read_reg_950 <= DNA_shr_five_int_reg;
        DNA_shr_four_read_reg_956 <= DNA_shr_four_int_reg;
        DNA_shr_one_read_reg_971 <= DNA_shr_one_int_reg;
        DNA_shr_three_read_reg_961 <= DNA_shr_three_int_reg;
        DNA_shr_two_read_reg_966 <= DNA_shr_two_int_reg;
        bit_sel_reg_1094 <= add_ln660_fu_669_p2[2'd1];
        max_12_reg_1012 <= max_12_fu_387_p3;
        max_23_reg_1088 <= max_23_fu_591_p3;
        max_35_reg_1151 <= max_35_fu_816_p3;
        shl_ln665_reg_1023 <= shl_ln665_fu_427_p2;
        shl_ln666_reg_1028 <= shl_ln666_fu_437_p2;
        shl_ln667_reg_1033 <= shl_ln667_fu_447_p2;
        shl_ln668_reg_1038 <= shl_ln668_fu_457_p2;
        shl_ln669_reg_1043 <= shl_ln669_fu_467_p2;
        shl_ln670_reg_1048 <= shl_ln670_fu_477_p2;
        shl_ln671_reg_1053 <= shl_ln671_fu_487_p2;
        shl_ln672_reg_1058 <= shl_ln672_fu_497_p2;
        shl_ln673_reg_1064 <= shl_ln673_fu_506_p2;
        shl_ln674_reg_1070 <= shl_ln674_fu_515_p2;
        shl_ln675_reg_1076 <= shl_ln675_fu_524_p2;
        trunc_ln318_reg_1157 <= trunc_ln318_fu_824_p1;
        trunc_ln660_2_reg_1099 <= trunc_ln660_2_fu_682_p1;
        trunc_ln660_reg_1018 <= trunc_ln660_fu_419_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= global_count_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp130) & (1'b1 == ap_ce_reg))) begin
        counter_A_18_reg_1104 <= counter_A_18_count_one_bit_fu_243_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp132) & (1'b1 == ap_ce_reg))) begin
        counter_A_20_reg_1116 <= counter_A_20_count_one_bit_fu_253_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp134) & (1'b1 == ap_ce_reg))) begin
        counter_A_22_reg_1128 <= counter_A_22_count_one_bit_fu_263_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp136) & (1'b1 == ap_ce_reg))) begin
        counter_A_24_reg_1140 <= counter_A_24_count_one_bit_fu_273_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp76) & (1'b1 == ap_ce_reg))) begin
        counter_A_38_reg_1082 <= counter_A_38_count_one_bit_fu_203_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp131) & (1'b1 == ap_ce_reg))) begin
        counter_A_43_reg_1110 <= counter_A_43_count_one_bit_fu_248_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp133) & (1'b1 == ap_ce_reg))) begin
        counter_A_44_reg_1122 <= counter_A_44_count_one_bit_fu_258_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp135) & (1'b1 == ap_ce_reg))) begin
        counter_A_45_reg_1134 <= counter_A_45_count_one_bit_fu_268_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp137) & (1'b1 == ap_ce_reg))) begin
        counter_A_46_reg_1146 <= counter_A_46_count_one_bit_fu_278_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp25) & (1'b1 == ap_ce_reg))) begin
        counter_A_9_reg_1006 <= counter_A_9_count_one_bit_fu_162_ap_return;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = global_count_fu_944_p2;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln660_1_fu_938_p2 = (select_ln318_fu_931_p3 + 2'd1);

assign add_ln660_fu_669_p2 = (trunc_ln660_1_fu_665_p1 + trunc_ln660_reg_1018);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp130 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp131 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp132 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp133 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp134 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp135 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp136 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp137 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp76 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp127 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp128 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp129 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp130 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp131 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp132 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp133 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp134 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp135 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp136 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp137 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp42 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp70 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp71 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp72 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp73 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp74 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp75 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp76 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp87 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp88 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp89 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp90 = ~(1'b1 == 1'b1);

assign counter_A_10_count_one_bit_fu_198_input_seq_val = DNA_shl_five_read_reg_976 << large_countcast47_fu_473_p1;

assign counter_A_16_count_one_bit_fu_233_input_seq_val = shl_ln666_reg_1028 << large_count_2cast53_fu_696_p1;

assign counter_A_18_count_one_bit_fu_243_input_seq_val = shl_ln668_reg_1038 << large_count_2cast55_fu_716_p1;

assign counter_A_20_count_one_bit_fu_253_input_seq_val = shl_ln670_reg_1048 << large_count_2cast57_fu_736_p1;

assign counter_A_22_count_one_bit_fu_263_input_seq_val = shl_ln672_reg_1058 << large_count_2cast59_fu_756_p1;

assign counter_A_24_count_one_bit_fu_273_input_seq_val = shl_ln674_reg_1070 << large_count_2cast61_fu_776_p1;

assign counter_A_2_count_one_bit_fu_178_input_seq_val = DNA_shl_one_read_reg_996 << large_countcast43_fu_433_p1;

assign counter_A_35_count_one_bit_fu_173_input_seq_val = DNA_nsh_read_reg_1001 << large_countcast_fu_423_p1;

assign counter_A_36_count_one_bit_fu_183_input_seq_val = DNA_shl_two_read_reg_991 << large_countcast44_fu_443_p1;

assign counter_A_37_count_one_bit_fu_193_input_seq_val = DNA_shl_four_read_reg_981 << large_countcast46_fu_463_p1;

assign counter_A_38_count_one_bit_fu_203_input_seq_val = DNA_shr_one_read_reg_971 << large_countcast48_fu_483_p1;

assign counter_A_41_count_one_bit_fu_228_input_seq_val = shl_ln665_reg_1023 << large_count_2cast_fu_686_p1;

assign counter_A_42_count_one_bit_fu_238_input_seq_val = shl_ln667_reg_1033 << large_count_2cast54_fu_706_p1;

assign counter_A_43_count_one_bit_fu_248_input_seq_val = shl_ln669_reg_1043 << large_count_2cast56_fu_726_p1;

assign counter_A_44_count_one_bit_fu_258_input_seq_val = shl_ln671_reg_1053 << large_count_2cast58_fu_746_p1;

assign counter_A_45_count_one_bit_fu_268_input_seq_val = shl_ln673_reg_1064 << large_count_2cast60_fu_766_p1;

assign counter_A_46_count_one_bit_fu_278_input_seq_val = shl_ln675_reg_1076 << large_count_2cast62_fu_786_p1;

assign counter_A_6_count_one_bit_fu_188_input_seq_val = DNA_shl_three_read_reg_986 << large_countcast45_fu_453_p1;

assign global_count_1_fu_833_p3 = {{xor_ln660_fu_828_p2}, {trunc_ln660_2_reg_1099}};

assign global_count_fu_944_p2 = (add_ln660_1_fu_938_p2 + global_count_1_fu_833_p3);

assign icmp_ln318_10_fu_529_p2 = ((counter_A_2_count_one_bit_fu_178_ap_return > counter_A_35_count_one_bit_fu_173_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_11_fu_543_p2 = ((max_17_fu_535_p3 < counter_A_36_count_one_bit_fu_183_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_12_fu_557_p2 = ((max_19_fu_549_p3 < counter_A_6_count_one_bit_fu_188_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_13_fu_571_p2 = ((max_20_fu_563_p3 < counter_A_37_count_one_bit_fu_193_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_14_fu_585_p2 = ((max_22_fu_577_p3 < counter_A_10_count_one_bit_fu_198_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_15_fu_599_p2 = ((max_23_reg_1088 < counter_A_38_reg_1082) ? 1'b1 : 1'b0);

assign icmp_ln318_16_fu_609_p2 = ((max_25_fu_603_p3 < counter_A_12_count_one_bit_fu_208_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_17_fu_623_p2 = ((max_26_fu_615_p3 < counter_A_39_count_one_bit_fu_213_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_18_fu_637_p2 = ((max_28_fu_629_p3 < counter_A_14_count_one_bit_fu_218_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_19_fu_651_p2 = ((max_29_fu_643_p3 < counter_A_40_count_one_bit_fu_223_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_1_fu_297_p2 = ((max_1_fu_289_p3 < counter_A_30_count_one_bit_fu_120_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_20_fu_796_p2 = ((counter_A_16_count_one_bit_fu_233_ap_return > counter_A_41_count_one_bit_fu_228_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_21_fu_810_p2 = ((max_33_fu_802_p3 < counter_A_42_count_one_bit_fu_238_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_22_fu_840_p2 = ((max_35_reg_1151 < counter_A_18_reg_1104) ? 1'b1 : 1'b0);

assign icmp_ln318_23_fu_850_p2 = ((max_36_fu_844_p3 < counter_A_43_reg_1110) ? 1'b1 : 1'b0);

assign icmp_ln318_24_fu_862_p2 = ((max_38_fu_855_p3 < counter_A_20_reg_1116) ? 1'b1 : 1'b0);

assign icmp_ln318_25_fu_874_p2 = ((max_39_fu_867_p3 < counter_A_44_reg_1122) ? 1'b1 : 1'b0);

assign icmp_ln318_26_fu_886_p2 = ((max_41_fu_879_p3 < counter_A_22_reg_1128) ? 1'b1 : 1'b0);

assign icmp_ln318_27_fu_898_p2 = ((max_42_fu_891_p3 < counter_A_45_reg_1134) ? 1'b1 : 1'b0);

assign icmp_ln318_28_fu_910_p2 = ((max_44_fu_903_p3 < counter_A_24_reg_1140) ? 1'b1 : 1'b0);

assign icmp_ln318_29_fu_922_p2 = ((max_45_fu_915_p3 < counter_A_46_reg_1146) ? 1'b1 : 1'b0);

assign icmp_ln318_2_fu_311_p2 = ((max_3_fu_303_p3 < counter_A_3_count_one_bit_fu_126_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_3_fu_325_p2 = ((max_4_fu_317_p3 < counter_A_31_count_one_bit_fu_132_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_4_fu_339_p2 = ((max_6_fu_331_p3 < counter_A_5_count_one_bit_fu_138_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_5_fu_353_p2 = ((max_7_fu_345_p3 < counter_A_32_count_one_bit_fu_144_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_6_fu_367_p2 = ((max_9_fu_359_p3 < counter_A_7_count_one_bit_fu_150_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_7_fu_381_p2 = ((max_10_fu_373_p3 < counter_A_33_count_one_bit_fu_156_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_8_fu_395_p2 = ((max_12_reg_1012 < counter_A_9_reg_1006) ? 1'b1 : 1'b0);

assign icmp_ln318_9_fu_405_p2 = ((max_13_fu_399_p3 < counter_A_34_count_one_bit_fu_168_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_283_p2 = ((counter_A_1_count_one_bit_fu_114_ap_return > counter_A_count_one_bit_fu_108_ap_return) ? 1'b1 : 1'b0);

assign large_count_2_fu_657_p3 = ((icmp_ln318_19_fu_651_p2[0:0] == 1'b1) ? counter_A_40_count_one_bit_fu_223_ap_return : max_29_fu_643_p3);

assign large_count_2cast53_fu_696_p1 = large_count_2_fu_657_p3;

assign large_count_2cast54_fu_706_p1 = large_count_2_fu_657_p3;

assign large_count_2cast55_fu_716_p1 = large_count_2_fu_657_p3;

assign large_count_2cast56_fu_726_p1 = large_count_2_fu_657_p3;

assign large_count_2cast57_fu_736_p1 = large_count_2_fu_657_p3;

assign large_count_2cast58_fu_746_p1 = large_count_2_fu_657_p3;

assign large_count_2cast59_fu_756_p1 = large_count_2_fu_657_p3;

assign large_count_2cast60_fu_766_p1 = large_count_2_fu_657_p3;

assign large_count_2cast61_fu_776_p1 = large_count_2_fu_657_p3;

assign large_count_2cast62_fu_786_p1 = large_count_2_fu_657_p3;

assign large_count_2cast_fu_686_p1 = large_count_2_fu_657_p3;

assign large_count_fu_411_p3 = ((icmp_ln318_9_fu_405_p2[0:0] == 1'b1) ? counter_A_34_count_one_bit_fu_168_ap_return : max_13_fu_399_p3);

assign large_countcast43_fu_433_p1 = large_count_fu_411_p3;

assign large_countcast44_fu_443_p1 = large_count_fu_411_p3;

assign large_countcast45_fu_453_p1 = large_count_fu_411_p3;

assign large_countcast46_fu_463_p1 = large_count_fu_411_p3;

assign large_countcast47_fu_473_p1 = large_count_fu_411_p3;

assign large_countcast48_fu_483_p1 = large_count_fu_411_p3;

assign large_countcast49_fu_493_p1 = large_count_fu_411_p3;

assign large_countcast50_fu_502_p1 = large_count_fu_411_p3;

assign large_countcast51_fu_511_p1 = large_count_fu_411_p3;

assign large_countcast52_fu_520_p1 = large_count_fu_411_p3;

assign large_countcast_fu_423_p1 = large_count_fu_411_p3;

assign max_10_fu_373_p3 = ((icmp_ln318_6_fu_367_p2[0:0] == 1'b1) ? counter_A_7_count_one_bit_fu_150_ap_return : max_9_fu_359_p3);

assign max_12_fu_387_p3 = ((icmp_ln318_7_fu_381_p2[0:0] == 1'b1) ? counter_A_33_count_one_bit_fu_156_ap_return : max_10_fu_373_p3);

assign max_13_fu_399_p3 = ((icmp_ln318_8_fu_395_p2[0:0] == 1'b1) ? counter_A_9_reg_1006 : max_12_reg_1012);

assign max_17_fu_535_p3 = ((icmp_ln318_10_fu_529_p2[0:0] == 1'b1) ? counter_A_2_count_one_bit_fu_178_ap_return : counter_A_35_count_one_bit_fu_173_ap_return);

assign max_19_fu_549_p3 = ((icmp_ln318_11_fu_543_p2[0:0] == 1'b1) ? counter_A_36_count_one_bit_fu_183_ap_return : max_17_fu_535_p3);

assign max_1_fu_289_p3 = ((icmp_ln318_fu_283_p2[0:0] == 1'b1) ? counter_A_1_count_one_bit_fu_114_ap_return : counter_A_count_one_bit_fu_108_ap_return);

assign max_20_fu_563_p3 = ((icmp_ln318_12_fu_557_p2[0:0] == 1'b1) ? counter_A_6_count_one_bit_fu_188_ap_return : max_19_fu_549_p3);

assign max_22_fu_577_p3 = ((icmp_ln318_13_fu_571_p2[0:0] == 1'b1) ? counter_A_37_count_one_bit_fu_193_ap_return : max_20_fu_563_p3);

assign max_23_fu_591_p3 = ((icmp_ln318_14_fu_585_p2[0:0] == 1'b1) ? counter_A_10_count_one_bit_fu_198_ap_return : max_22_fu_577_p3);

assign max_25_fu_603_p3 = ((icmp_ln318_15_fu_599_p2[0:0] == 1'b1) ? counter_A_38_reg_1082 : max_23_reg_1088);

assign max_26_fu_615_p3 = ((icmp_ln318_16_fu_609_p2[0:0] == 1'b1) ? counter_A_12_count_one_bit_fu_208_ap_return : max_25_fu_603_p3);

assign max_28_fu_629_p3 = ((icmp_ln318_17_fu_623_p2[0:0] == 1'b1) ? counter_A_39_count_one_bit_fu_213_ap_return : max_26_fu_615_p3);

assign max_29_fu_643_p3 = ((icmp_ln318_18_fu_637_p2[0:0] == 1'b1) ? counter_A_14_count_one_bit_fu_218_ap_return : max_28_fu_629_p3);

assign max_33_fu_802_p3 = ((icmp_ln318_20_fu_796_p2[0:0] == 1'b1) ? counter_A_16_count_one_bit_fu_233_ap_return : counter_A_41_count_one_bit_fu_228_ap_return);

assign max_35_fu_816_p3 = ((icmp_ln318_21_fu_810_p2[0:0] == 1'b1) ? counter_A_42_count_one_bit_fu_238_ap_return : max_33_fu_802_p3);

assign max_36_fu_844_p3 = ((icmp_ln318_22_fu_840_p2[0:0] == 1'b1) ? counter_A_18_reg_1104 : max_35_reg_1151);

assign max_38_fu_855_p3 = ((icmp_ln318_23_fu_850_p2[0:0] == 1'b1) ? counter_A_43_reg_1110 : max_36_fu_844_p3);

assign max_39_fu_867_p3 = ((icmp_ln318_24_fu_862_p2[0:0] == 1'b1) ? counter_A_20_reg_1116 : max_38_fu_855_p3);

assign max_3_fu_303_p3 = ((icmp_ln318_1_fu_297_p2[0:0] == 1'b1) ? counter_A_30_count_one_bit_fu_120_ap_return : max_1_fu_289_p3);

assign max_41_fu_879_p3 = ((icmp_ln318_25_fu_874_p2[0:0] == 1'b1) ? counter_A_44_reg_1122 : max_39_fu_867_p3);

assign max_42_fu_891_p3 = ((icmp_ln318_26_fu_886_p2[0:0] == 1'b1) ? counter_A_22_reg_1128 : max_41_fu_879_p3);

assign max_44_fu_903_p3 = ((icmp_ln318_27_fu_898_p2[0:0] == 1'b1) ? counter_A_45_reg_1134 : max_42_fu_891_p3);

assign max_45_fu_915_p3 = ((icmp_ln318_28_fu_910_p2[0:0] == 1'b1) ? counter_A_24_reg_1140 : max_44_fu_903_p3);

assign max_4_fu_317_p3 = ((icmp_ln318_2_fu_311_p2[0:0] == 1'b1) ? counter_A_3_count_one_bit_fu_126_ap_return : max_3_fu_303_p3);

assign max_6_fu_331_p3 = ((icmp_ln318_3_fu_325_p2[0:0] == 1'b1) ? counter_A_31_count_one_bit_fu_132_ap_return : max_4_fu_317_p3);

assign max_7_fu_345_p3 = ((icmp_ln318_4_fu_339_p2[0:0] == 1'b1) ? counter_A_5_count_one_bit_fu_138_ap_return : max_6_fu_331_p3);

assign max_9_fu_359_p3 = ((icmp_ln318_5_fu_353_p2[0:0] == 1'b1) ? counter_A_32_count_one_bit_fu_144_ap_return : max_7_fu_345_p3);

assign select_ln318_fu_931_p3 = ((icmp_ln318_29_fu_922_p2[0:0] == 1'b1) ? trunc_ln318_reg_1157 : trunc_ln318_1_fu_927_p1);

assign shl_ln665_fu_427_p2 = DNA_nsh_read_reg_1001 << large_countcast_fu_423_p1;

assign shl_ln666_fu_437_p2 = DNA_shl_one_read_reg_996 << large_countcast43_fu_433_p1;

assign shl_ln667_fu_447_p2 = DNA_shl_two_read_reg_991 << large_countcast44_fu_443_p1;

assign shl_ln668_fu_457_p2 = DNA_shl_three_read_reg_986 << large_countcast45_fu_453_p1;

assign shl_ln669_fu_467_p2 = DNA_shl_four_read_reg_981 << large_countcast46_fu_463_p1;

assign shl_ln670_fu_477_p2 = DNA_shl_five_read_reg_976 << large_countcast47_fu_473_p1;

assign shl_ln671_fu_487_p2 = DNA_shr_one_read_reg_971 << large_countcast48_fu_483_p1;

assign shl_ln672_fu_497_p2 = DNA_shr_two_read_reg_966 << large_countcast49_fu_493_p1;

assign shl_ln673_fu_506_p2 = DNA_shr_three_read_reg_961 << large_countcast50_fu_502_p1;

assign shl_ln674_fu_515_p2 = DNA_shr_four_read_reg_956 << large_countcast51_fu_511_p1;

assign shl_ln675_fu_524_p2 = DNA_shr_five_read_reg_950 << large_countcast52_fu_520_p1;

assign trunc_ln318_1_fu_927_p1 = max_45_fu_915_p3[1:0];

assign trunc_ln318_fu_824_p1 = counter_A_46_count_one_bit_fu_278_ap_return[1:0];

assign trunc_ln660_1_fu_665_p1 = large_count_2_fu_657_p3[1:0];

assign trunc_ln660_2_fu_682_p1 = add_ln660_fu_669_p2[0:0];

assign trunc_ln660_fu_419_p1 = large_count_fu_411_p3[1:0];

assign xor_ln660_fu_828_p2 = (bit_sel_reg_1094 ^ 1'd1);

endmodule //SneakySnake_bit_after_neighbohood
